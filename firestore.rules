rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdmin() {
      return getRole(request.auth.uid) == 'admin';
    }
    
    function isDoctor() {
       return getRole(request.auth.uid) == 'doctor';
    }

    // USERS collection
    match /users/{userId} {
      // READ:
      // - Any signed-in user can read their own profile.
      // - An admin can read any user's profile.
      // - A doctor can read any user's profile (for patient lists).
      allow read: if isSignedIn() && (isUser(userId) || isAdmin() || isDoctor());

      // CREATE:
      // - A new user can create their own document (e.g., Google Sign-In).
      // - An admin can create any user document.
      allow create: if (isSignedIn() && isUser(userId)) || isAdmin();

      // UPDATE:
      // - A user can update their own profile (e.g., change name).
      // - An admin can update any user's role/details.
      allow update: if (isSignedIn() && isUser(userId)) || isAdmin();

      // DELETE:
      // - Only an admin can delete a user document.
      allow delete: if isAdmin();

      // Sub-collections for Patients
      match /appointments/{appointmentId} {
        // Patients can create their own appointments.
        // Doctors/Admins can manage appointments.
        allow read, write: if isSignedIn() && (isUser(userId) || isDoctor() || isAdmin());
      }

      match /prescriptions/{prescriptionId} {
        // Patients can only read their prescriptions.
        allow read: if isSignedIn() && isUser(userId);
        // Only doctors and admins can create/update prescriptions.
        allow write: if isDoctor() || isAdmin();
      }
    }
  }
}
